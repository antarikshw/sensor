#include <SoftwareSerial.h>
SoftwareSerial espSerial = SoftwareSerial(2,3);
#include <DHT.h>
#define PROCESSING_VISUALIZER 1
#define SERIAL_PLOTTER 2
int pulsePin = 4;
int blinkPin = 13;
int fadePin = 5;
int fadeRate = 0;
volatile int BPM;
volatile int Signal;
volatile int IBI = 600;
volatile boolean Pulse = false;
volatile boolean QS = false;
static int outputType = SERIAL_PLOTTER;
#define DHTPIN 5
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);
String apiKey = "9GNHCXRG0WQO0N82";
String ssid="LS-5007";
String password ="12345678"; // Wifi network password
boolean DEBUG=true
void showResponse(int waitTime){
long t=millis();
char c;
while (t+waitTime>millis()){
if (espSerial.available()){
c=espSerial.read();
if (DEBUG) Serial.print(c);
}
}
}
boolean thingSpeakWrite(float value1, float value2, int value3, int value4,int value5)
{
String cmd = "AT+CIPSTART=\"TCP\",\"";
cmd += "184.106.153.149";
cmd += "\",80";
espSerial.println(cmd);
if (DEBUG) Serial.println(cmd);
if(espSerial.find("Error")){
if (DEBUG) Serial.println("AT+CIPSTART error");
return false;
}
String getStr = "GET /update?api_key=";
getStr += apiKey;
getStr +="&field4=";
getStr += String(value1);
getStr +="&field2=";
getStr += String(value2);
getStr +="&field3=";
getStr += String(value3);
getStr +="&field5=";
getStr += String(value4);
getStr +="&field1=";
getStr += String(value5);
// getStr +="&field3=";
// getStr += String(value3);
getStr += "\r\n\r\n\r\n\r\n";
cmd = "AT+CIPSEND=";
cmd += String(getStr.length());
espSerial.println(cmd);
if (DEBUG) Serial.println(cmd);
delay(100);
if(espSerial.find(">")){
espSerial.print(getStr);
if (DEBUG) {
Serial.print(getStr);
showResponse(1000);
}
}
else{
espSerial.println("AT+CIPCLOSE");
if (DEBUG) Serial.println("AT+CIPCLOSE");
return false;
}
return true;
}
void setup() {
DEBUG=true;
Serial.begin(9600);
dht.begin();
espSerial.begin(9600);
//espSerial.println("AT+CIOBAUD=9600");
//espSerial.println("AT+UART_CUR=9600,8,1,0,0");
espSerial.println("AT");
delay(1000);
showResponse(1000);
espSerial.println("AT+RST");
showResponse(1000);
espSerial.println("AT+CWMODE=1");
showResponse(1000);
espSerial.println("AT+CWJAP=\""+ssid+"\",\""+password+"\"");
showResponse(5000);
//espSerial.println("AT+RST");
//showResponse(5000);
//espSerial.println("AT+CIPMODE=0");
// showResponse(5000);
// espSerial.println("AT+CIPMUX=1");
// showResponse(5000);
if (DEBUG) Serial.println("Setup completed");
pinMode(blinkPin,OUTPUT);
pinMode(fadePin,OUTPUT);
// Serial.begin(115200);
interruptSetup();
// analogReference(EXTERNAL);
}
void loop() {
float t = dht.readTemperature();
float h = dht.readHumidity();
if (isnan(t) || isnan(h)) {
if (DEBUG) Serial.println("Failed to read from DHT");
}
else {
if (DEBUG) Serial.println("Temp="+String(t)+" *C");
if (DEBUG) Serial.println("Humidity="+String(h)+" %");
}
serialOutput() ;
if (QS == true){
fadeRate = 255;
serialOutputWhenBeatHappens();
QS = false;
}
ledFadeToBeat();
delay(20);
int sensorValue = analogRead(A0);
Serial.println(sensorValue);
thingSpeakWrite(t,h,IBI,BPM,sensorValue);
delay(15000);
}
void ledFadeToBeat(){
fadeRate -= 15;
fadeRate = constrain(fadeRate,0,255);
analogWrite(fadePin,fadeRate);
}